<project xmlns:artifact="urn:maven-artifact-ant" name="jbehave" default="good-distribution">

	<!-- Maven POM for dependencies -->
	<path id="maven-ant-tasks.classpath" path="lib/build/maven-ant-tasks-2.0.9.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath" />
	<artifact:pom id="pom" file="jbehave-core/pom.xml" />

	<!-- version -->
	<property name="version" value="2.0-SNAPSHOT" />
	<echo message="Building version ${version}..." />

	<!-- modules -->
	<property name="core.dir" location="jbehave-core" />
	<property name="build.libs.dir" location="lib/build" />
	<property name="production.libs.dir" location="lib/production" />

	<!-- build output structure -->
	<property name="working.dir" location="target" />
	<property name="jbehave.source" location="jbehave-core/src/java" />
	<property name="jbehave.behaviour" location="jbehave-core/src/behaviour" />
	<property name="jbehave.classes" location="${working.dir}/classes" />
	<property name="jbehave.behaviour.classes" location="${working.dir}/behaviour" />
	<property name="gameoflife.source" location="examples/gameoflife/src/java" />
	<property name="gameoflife.behaviour" location="examples/gameoflife/src/behaviour" />
	<property name="gameoflife.scenarios" location="examples/gameoflife/src/scenario" />
	<property name="example.classes" location="${working.dir}/examples/classes" />
	<property name="example.behaviour.classes" location="${working.dir}/examples/behaviour" />
	<property name="example.scenario.classes" location="${working.dir}/examples/scenario" />
	<property name="jbehave.zip" location="${working.dir}/jbehave-${version}.zip" />
	<property name="dist.dir" location="${working.dir}/${version}" />
	<property name="jbehave.jar" location="${dist.dir}/jbehave-${version}.jar" />
	<property name="jbehave.src.zip" location="${dist.dir}/jbehave-${version}-src.zip" />
	<property name="website.dist.dir" location="${dist.dir}/website" />
	<property name="javadoc.dist.dir" location="${website.dist.dir}/javadoc/${version}" />

	<path id="production.libs">
		<fileset dir="${production.libs.dir}" includes="**/*.jar" />
	</path>

	<path id="build.libs">
		<path refid="production.libs" />
		<fileset dir="${build.libs.dir}" includes="**/*.jar" />
	</path>

    <target name="copy-dependencies">
        <artifact:dependencies filesetId="pom.dependencies" useScope="test">
            <pom refid="pom" />
        </artifact:dependencies>
        <copy todir="target/lib">
            <fileset refid="pom.dependencies" />
            <mapper type="flatten" />
        </copy>
    </target>

  	<!-- general targets -->
	<target name="good-distribution" depends="clean, working-jbehave, working-examples, jbehave-jar" description="Checks that JBehave works, builds the JBehave binary and zips up the project." />

	<target name="clean">
		<clean dir="${working.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<macrodef name="clean">
		<attribute name="dir" />
		<sequential>
			<delete dir="@{dir}" />
			<mkdir dir="@{dir}" />
		</sequential>
	</macrodef>

	<!-- JBehave itself -->
	<target name="working-jbehave" depends="jbehave-classes, jbehave-behaviour-classes" description="Ensures that you have a working version of JBehave.">
		<junit failureproperty="misbehaving" showoutput="true">
			<classpath refid="build.libs" />
			<classpath>
				<pathelement path="${jbehave.classes}" />
				<pathelement path="${jbehave.behaviour.classes}" />
			</classpath>
			<batchtest fork="yes" todir="${working.dir}">
				<fileset dir="${jbehave.behaviour}">
					<include name="**/*Behaviour.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail if="${misbehaving}" />
	</target>

	<target name="jbehave-behaviour-classes" depends="jbehave-classes" description="Ensures compiled behaviour classes for JBehave.">
		<delete dir="${jbehave.behaviour.classes}" />
		<mkdir dir="${jbehave.behaviour.classes}" />
		<javac srcdir="${jbehave.behaviour}" destdir="${jbehave.behaviour.classes}">
			<classpath refid="build.libs" />
			<classpath>
				<pathelement path="${jbehave.classes}" />
			</classpath>
		</javac>
	</target>

	<target name="jbehave-classes" description="Ensures compiled classes for JBehave.">
		<delete dir="${jbehave.classes}" />
		<mkdir dir="${jbehave.classes}" />
		<javac srcdir="${jbehave.source}" destdir="${jbehave.classes}">
			<classpath refid="production.libs" />
		</javac>
		<copy todir="${jbehave.classes}">
			<fileset dir="${jbehave.source}" excludes="**/*.java" />
		</copy>
	</target>

	<!-- The examples -->
	<target name="working-examples" depends="working-example-behaviours, working-example-scenarios" description="Ensures that the example projects work with JBehave effectively, from the JBehave jar." />

	<target name="working-example-behaviours" depends="compiled-examples, compiled-example-behaviours, jbehave-jar" description="Ensures that examples behave.">
		<junit failureproperty="misbehaving" showoutput="true">
			<formatter type="plain" />
			<classpath refid="build.libs" />
			<classpath>
				<pathelement path="${example.classes}" />
				<pathelement path="${example.behaviour.classes}" />
				<pathelement path="${jbehave.jar}" />
			</classpath>
			<batchtest fork="yes" todir="${working.dir}">
				<fileset dir="${gameoflife.behaviour}">
					<include name="**/*Behaviour.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail if="misbehaving" />
	</target>

	<target name="compiled-example-behaviours" depends="compiled-examples, jbehave-jar" description="Ensures compiled example behaviour classes.">
		<delete dir="${example.behaviour.classes}" />
		<mkdir dir="${example.behaviour.classes}" />
		<javac srcdir="${gameoflife.behaviour}" destdir="${example.behaviour.classes}">
			<classpath>
				<pathelement path="${jbehave.jar}" />
				<pathelement path="${example.classes}" />
			</classpath>
			<classpath refid="build.libs" />
		</javac>
	</target>

	<target name="compiled-examples" description="Ensures compiled example classes." depends="jbehave-jar">
		<delete dir="${example.classes}" />
		<mkdir dir="${example.classes}" />
		<javac srcdir="${gameoflife.source}" destdir="${example.classes}">
			<classpath>
				<pathelement location="${jbehave.jar}" />
			</classpath>
			<classpath refid="build.libs" />
		</javac>
	</target>

	<target name="working-example-scenarios" depends="compiled-example-behaviours, compiled-examples, compiled-example-scenarios, jbehave-jar" description="Ensures that the scenarios for the examples work.">
		<junit failureproperty="misbehaving" showoutput="true">
			<classpath refid="build.libs" />
			<classpath>
				<pathelement path="${example.classes}" />
				<pathelement path="${example.behaviour.classes}" />
				<pathelement path="${example.scenario.classes}" />
				<pathelement location="${jbehave.jar}" />
			</classpath>
			<batchtest fork="yes" todir="${working.dir}">
				<fileset dir="${gameoflife.scenarios}">
					<include name="com/lunivore.gameoflife/*.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail if="misbehaving" />
	</target>

	<target name="compiled-example-scenarios" depends="compiled-example-behaviours, compiled-examples, jbehave-jar" description="Ensures compiled classes for the examples' scenarios">
		<delete dir="${example.scenario.classes}" />
		<mkdir dir="${example.scenario.classes}" />
		<javac srcdir="${gameoflife.scenarios}" destdir="${example.scenario.classes}">
			<classpath refid="build.libs" />
			<classpath>
				<pathelement path="${example.classes}" />
				<pathelement path="${example.behaviour.classes}" />
				<pathelement path="${jbehave.jar}" />
			</classpath>
		</javac>
	</target>

	<target name="jbehave-jar" description="Produces a jar file in the distribution directory." depends="jbehave-classes">
		<jar basedir="${jbehave.classes}" jarfile="${jbehave.jar}" />
	</target>

	<target name="jbehave-src-zip" description="Assembles the source jar.">
		<zip destfile="${jbehave.src.zip}" update="true" filesonly="true">
			<zipfileset prefix="jbehave-${version}" dir="${jbehave.source}" />
		</zip>
	</target>

	<!-- create website -->
	<target name="javadoc" description="Generates javadocs.">
		<mkdir dir="${javadoc.dist.dir}" />
		<javadoc destdir="${javadoc.dist.dir}" windowtitle="JBehave API Documentation" verbose="false" useexternalfile="true">
			<fileset dir="${jbehave.source}">
				<include name="*.java" />
			</fileset>
			<classpath refid="production.libs" />
		</javadoc>
	</target>

	<target name="website-content" description="Generates website content.">
		<exec executable="ruby" failonerror="true">
			<arg value="sitespec.rb" />
			<arg value="${website.dist.dir}" />
		</exec>
	</target>

	<target name="website" depends="javadoc, website-content" description="Generates website." />

</project>

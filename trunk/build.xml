<project name="jbehave" default="build">
	<property name="version" value="1.0-SNAPSHOT" />
	<echo message="Building version ${version}..." />

	<!-- modules -->
	<property name="core_dir" location="core" />
	<property name="everything_dir" location="everything" />
	<property name="extensions_dir" location="extensions" />
	<property name="website_dir" location="website" />
	<property name="lib_dir" location="lib" />
	<path id="libs">
		<fileset dir="${lib_dir}" includes="extensions/jmock*.jar" />
		<fileset dir="${lib_dir}" includes="extensions/cglib*.jar" />
		<fileset dir="${lib_dir}" includes="extensions/junit.jar" />
		<fileset dir="${lib_dir}" includes="extensions/ant*.jar"/>
	</path>

	<!-- build output structure -->
	<property name="output_dir" location="delete_me" />
	<property name="classes_dir" location="${output_dir}/classes" />
	<property name="behaviour_classes_dir" location="${output_dir}/behaviour-classes" />
	<property name="hellbound_classes_dir" location="${output_dir}/hellbound-classes" />
	<property name="hellbound_behaviour_classes_dir" location="${output_dir}/hellbound-behaviours" />
	<property name="jbehave_zip" location="${output_dir}/jbehave.zip" />
	<property name="dist_dir" location="${output_dir}/${version}" />
	<property name="jbehave_jar" location="${dist_dir}/jbehave.jar" />
	<property name="jbehave_src_zip" location="${dist_dir}/jbehave-src.zip" />
	<property name="website_dist_dir" location="${dist_dir}/website"/>
	<property name="javadoc_dist_dir" location="${website_dist_dir}/docs/javadoc"/>

	<!-- general targets -->
	<target name="clean" description="Clean out output directory">
		<delete dir="${output_dir}" />
	</target>

	<target name="build" depends="verify-behaviour, build-source-zip" 
		description="build the jbehave binary and source" />

	<target name="dist" depends="build, website" description="assemble distribution">
		<zip taskname="assemble release" destfile="${jbehave_zip}" update="true">
			<fileset dir="${dist_dir}"/>
		</zip>
	</target>

	<!-- build and assemble -->
	<target name="-init">
		<mkdir dir="${output_dir}" />
	</target>

	<target name="build-jar" depends="-init" description="Compile and assemble the jar">
		<mkdir dir="${classes_dir}" />
		<unjar taskname="importing cotta classes" src="${lib_dir}/cotta/cotta-1.0.jar" dest="${classes_dir}">
			<patternset includes="net/**/*.*"/>
		</unjar>
		<javac taskname="build jbehave" srcdir="${core_dir}/src/java" destdir="${classes_dir}" source="1.3" target="1.3" classpathref="libs" debug="true">
			<src>
				<pathelement path="${core_dir}/src/java" />
				<dirset dir="${extensions_dir}" includes="**/src/java" />
			</src>
		</javac>
		<copy taskname="copying resource" todir="${classes_dir}">
			<fileset dir="${core_dir}/src/java" excludes="**/*.java"/>
		</copy>
		<mkdir dir="${dist_dir}" />
		<jar taskname="jbehave jar" basedir="${classes_dir}" jarfile="${jbehave_jar}" />
	</target>

	<target name="build-source-zip" depends="-init" description="Build the source zip file">
		<property name="cotta-src" location="${output_dir}/cotta-src"/>
		<mkdir dir="${cotta-src}"/>
		<unzip taskname="importing cotta source" src="${lib_dir}/cotta/cotta-1.0-src.zip" dest="${cotta-src}">
			<patternset includes="net/**/*.*"/>
		</unzip>
		<mkdir dir="${dist_dir}" />
		<zip taskname="zipping source" destfile="${jbehave_src_zip}" update="true">
			<fileset dir="${core_dir}/src"/>
			<fileset dir="${extensions_dir}/ant/src"/>
			<fileset dir="${extensions_dir}/jmock/src"/>
			<fileset dir="${extensions_dir}/junit/src"/>
			<fileset dir="${cotta-src}" includes="net/**/*"/>
		</zip>
	</target>

	<target name="verify-behaviour" depends="build-jar" description="Verify behaviour">
		<mkdir dir="${behaviour_classes_dir}" />
		<javac taskname="compile behaviours" destdir="${behaviour_classes_dir}" source="1.3" target="1.3" debug="true">
			<src>
				<pathelement path="${core_dir}/src/behaviour" />
				<pathelement path="${everything_dir}/src/behaviour" />
				<dirset dir="${extensions_dir}" includes="**/src/behaviour" />
			</src>
			<classpath>
				<pathelement path="${jbehave_jar}" />
				<path refid="libs"/>
			</classpath>
		</javac>
		<java taskname="run behaviours" classname="jbehave.core.Run" fork="true" failonerror="true">
			<arg value="jbehave.AllBehaviours" />
			<classpath>
				<pathelement path="${behaviour_classes_dir}" />
				<pathelement path="${jbehave_jar}" />
				<path refid="libs" />
			</classpath>
		</java>
	</target>

	<!-- create website -->
	<target name="javadoc" description="Generate javadocs">
		<mkdir dir="${javadoc_dist_dir}" />
		<javadoc
      destdir="${javadoc_dist_dir}"
      windowtitle="JBehave API Documentation"
      verbose="false"
      useexternalfile="true">
			<fileset dir="${extensions_dir}">
				<include name="*/src/java/**/*.java" />
				<exclude name="**/codegen/**" />
			</fileset>
			<fileset dir="${core_dir}">
				<include name="src/java/**/*.java" />
			</fileset>
			<classpath refid="libs" />
			<group title="Core API" packages="jbehave.core*" />
			<group title="JMock Extension" packages="jbehave.jmock*" />
			<group title="Ant Task Extension" packages="jbehave.ant*" />
			<group title="JUnit Adapter" packages="jbehave.junit*" />
			<group title="Story Runner" packages="jbehave.core.story*" />
			<classpath>
				<fileset dir="${lib_dir}" />
			</classpath>
		</javadoc>
	</target>
	
	<target name="website" depends="-init, javadoc" description="Generate website">
		<exec executable="ruby" dir="${website_dir}">
			<arg value="skinner.rb"/>
		</exec>
		<copy todir="${website_dist_dir}">
			<fileset dir="${website_dir}/output" />
		</copy>
	</target>

	<!-- additional targets -->
	<target name="sablecc" description="Generate sablecc grammar files">
		<java fork="true" jar="${lib_dir}/sablecc.jar">
			<arg value="-d" />
			<arg file="${core_dir}/src" />
			<arg file="${core_dir}/src/jbehave/core/story/codegen/story.scc" />
		</java>
	</target>

	<target name="run-hellbound-behaviours" description="Runs behaviours for Hellbound examples">
		<mkdir dir="${hellbound_classes_dir}" />
		<mkdir dir="${hellbound_behaviour_classes_dir}" />
		<javac taskname="compile hellbound" destdir="${hellbound_classes_dir}" source="1.3" target="1.3" debug="true">
			<src>
				<pathelement path="../examples/hellbound/src" />
			</src>
			<classpath>
				<pathelement path="${jbehave_jar}" />
				<path refid="libs"/>
			</classpath>
		</javac>
		<javac taskname="compile hellbound behaviours" destdir="${hellbound_behaviour_classes_dir}" source="1.3" target="1.3" debug="true">
			<src>
				<pathelement path="../examples/hellbound/behaviour" />
			</src>
			<classpath>
				<pathelement path="${jbehave_jar}" />
				<path refid="libs"/>
				<pathelement path="${hellbound_classes_dir}"/>
			</classpath>
		</javac>
		<java taskname="run hellbound behaviours" classname="jbehave.core.Run" fork="true" failonerror="true">
			<arg value="com.sirenian.hellbound.AllBehaviours" />
			<classpath>
				<pathelement path="${hellbound_behaviour_classes_dir}" />
				<pathelement path="${extensions_dir}" />
				<pathelement path="${hellbound_classes_dir}" />
				<pathelement path="${jbehave_jar}" />
				<path refid="libs" />
			</classpath>
		</java>
	</target>
</project>

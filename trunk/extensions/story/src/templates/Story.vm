/*
 * Created on 23-Aug-2004
 */
package stories;

import ${basePackage}.events.*;
import ${basePackage}.expectations.*;
import ${basePackage}.givens.*;
import com.thoughtworks.jbehave.story.core.domain.*;
import com.thoughtworks.jbehave.story.core.domain.base.StoryBase;

public class $story.className extends StoryBase {

#foreach ( $scenario in $story.scenarios )

        addScenario(new Scenario(
                "$scenario.name", this,
                new SimpleContext(
    #set ( $comma = "" )
    #if ( $scenario.context.scenario )
                    // TODO make this work for scenarios from other stories
                    getScenario("$scenario.context.scenario.name")
        #set ( $comma = "," )
    #end
    #foreach ( $given in $scenario.context.givens )
                    $comma new ${given.className}()
        #set ( $comma = "," )
    #end
                ),
                new ${scenario.event.className}(),
                new SimpleOutcome(
    #set ( $comma = "" )
    #foreach ( $expectation in $scenario.outcome.expectations )
                    $comma new ${expectation.className}()
        #set ( $comma = "," )
    #end
                )
            )
        );
        
#end
    }
}

#foreach ($scenario in $story.scenarios)
    #foreach ( $given in $scenario.context.givens )
public class ${given.className} extends GivenUsingMiniMock {
        public void setUp(Environment context) throws Exception {
         // add your code here
        }
    }

    #end
public class ${scenario.event.className} extends EventUsingMiniMock {

        public void occurIn(Environment environment) throws Exception {
            // add your code here
        }
}

    #foreach ( $expectation in $scenario.outcome.expectations )
public class ${expectation.className} extends ExpectationUsingMiniMock {
        public void setExpectationIn(Environment environment) {

        }

        public void verify(Environment environment) {
            
        }
}
    #end

#end

